<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:md.ce.corbaidl.rt.options="http://www.nomagic.com/magicdraw/ce/corbaidl/rt/options/1" xmlns:md.ce.cppAnsi.rt.options="http://www.nomagic.com/magicdraw/ce/cppAnsi/rt/options/1" xmlns:md.ce.csh.code.documentation="http://www.nomagic.com/magicdraw/ce/csh/code/documentation/1" xmlns:md.ce.csh.rt.options="http://www.nomagic.com/magicdraw/ce/csh/rt/options/1" xmlns:md.ce.java.code.documentation="http://www.nomagic.com/magicdraw/ce/java/code/documentation/1" xmlns:md.ce.java.rt.options="http://www.nomagic.com/magicdraw/ce/java/rt/options/1" xmlns:md.ce.msil.rt.options="http://www.nomagic.com/magicdraw/ce/msil/rt/options/1" xmlns:md.ce.rt.options="http://www.nomagic.com/magicdraw/ce/rt/options/1">
  <md.ce.rt.options:Options xmi:id="_W47ZsGsCEeCKy58F-nptQQ" tempDirectory="Active Directory" defaultWorkingDirectory="&lt;install.root>" spaces="8" defaultLanguage="Java" visualizationOption="1" codeGenerationReverseOption="2">
    <defaultWorkingPackage href="PROJECT-9a658237-b5dc-40c8-9844-5779778b572e?resource=com.nomagic.magicdraw.uml_umodel.model#eee_1045467100313_135436_1"/>
    <defaultImportedPackages href="PROJECT-9a658237-b5dc-40c8-9844-5779778b572e?resource=com.nomagic.magicdraw.uml_umodel.model#eee_1045467100313_135436_1"/>
  </md.ce.rt.options:Options>
  <md.ce.java.rt.options:JavaLanguageOptions xmi:id="_D4tpEOQMEeCJQfWZbM1pkQ" commentStyle="0" header="@(#) $FILE_NAME" documentationProcessorID="STANDARD_PROCESSOR" classpath="C:\Program Files\Amazon Corretto\jdk1.8.0_192\jre\lib\resources.jar;C:\Program Files\Amazon Corretto\jdk1.8.0_192\jre\lib\rt.jar;C:\Program Files\Amazon Corretto\jdk1.8.0_192\jre\lib\sunrsasign.jar;C:\Program Files\Amazon Corretto\jdk1.8.0_192\jre\lib\jsse.jar;C:\Program Files\Amazon Corretto\jdk1.8.0_192\jre\lib\jce.jar;C:\Program Files\Amazon Corretto\jdk1.8.0_192\jre\lib\charsets.jar;C:\Program Files\Amazon Corretto\jdk1.8.0_192\jre\lib\jfr.jar;C:\Program Files\Amazon Corretto\jdk1.8.0_192\jre\classes" javaSource="8.0">
    <documentationTagProcessors xsi:type="md.ce.java.code.documentation:JavaDocumentationProcessor" xmi:id="_oOJsgI6vEeG5DZT_fiQl2g" ID="JAVA_DOC_PROCESSOR">
      <documentationTagManagers xmi:id="_oOJsgY6vEeG5DZT_fiQl2g" ID="CLASSIFIER">
        <documentationTags xmi:id="_oOJsgo6vEeG5DZT_fiQl2g" name="DESCRIPTION" valueEditable="false"/>
        <documentationTags xmi:id="_oOJsg46vEeG5DZT_fiQl2g" name="@param &lt;>" valueEditable="false"/>
      </documentationTagManagers>
      <documentationTagManagers xmi:id="_oOKTkI6vEeG5DZT_fiQl2g" ID="OPERATION">
        <documentationTags xmi:id="_oOKTkY6vEeG5DZT_fiQl2g" name="DESCRIPTION" valueEditable="false"/>
        <documentationTags xmi:id="_oOKTko6vEeG5DZT_fiQl2g" name="@param" valueEditable="false"/>
        <documentationTags xmi:id="_oOKTk46vEeG5DZT_fiQl2g" name="@param &lt;>" valueEditable="false"/>
        <documentationTags xmi:id="_oOKTlI6vEeG5DZT_fiQl2g" name="@return" valueEditable="false"/>
        <documentationTags xmi:id="_oOKTlY6vEeG5DZT_fiQl2g" name="@throws" valueEditable="false"/>
      </documentationTagManagers>
      <documentationTagManagers xmi:id="_oOKTlo6vEeG5DZT_fiQl2g" ID="ATTRIBUTE">
        <documentationTags xmi:id="_oOKTl46vEeG5DZT_fiQl2g" name="DESCRIPTION" valueEditable="false"/>
      </documentationTagManagers>
    </documentationTagProcessors>
    <userDefinedAttributeCreationRule xmi:id="_7rMxYt9WEeSXCudwua_I0A" default="ASSOCIATION">
      <rules xmi:id="_7rMxY99WEeSXCudwua_I0A" creationType="ATTRIBUTE" pattern="*" classType="DataType"/>
    </userDefinedAttributeCreationRule>
  </md.ce.java.rt.options:JavaLanguageOptions>
  <md.ce.cppAnsi.rt.options:CppLanguageOptions xmi:id="_D43aEOQMEeCJQfWZbM1pkQ" commentStyle="0" header="@(#) $FILE_NAME" documentationProcessorID="STANDARD_PROCESSOR" macros="//This file contains a list of explicit macros to be expanded before reverse engineering&#xD;&#xA;#define ODBCXX_EXPORT&#xD;&#xA;#define __EXPORT&#xD;&#xA;&#xD;&#xA;//Type Casting of MFC Class Objects&#xD;&#xA;#define DYNAMIC_DOWNCAST( class, pointer )&#xD;&#xA;#define STATIC_DOWNCAST( class_name, pobject )&#xD;&#xA;&#xD;&#xA;//Run-Time Object Model Services&#xD;&#xA;#define DECLARE_DYNAMIC( class_name )&#xD;&#xA;#define DECLARE_DYNCREATE( class_name )&#xD;&#xA;#define DECLARE_SERIAL( class_name )&#xD;&#xA;#define IMPLEMENT_DYNAMIC( class_name, base_class_name )&#xD;&#xA;#define IMPLEMENT_DYNCREATE( class_name, base_class_name )&#xD;&#xA;#define IMPLEMENT_SERIAL( class_name, base_class_name, wSchema )&#xD;&#xA;#define RUNTIME_CLASS( class_name )&#xD;&#xA;#define DECLARE_OLECREATE( class_name )&#xD;&#xA;#define IMPLEMENT_OLECREATE( class_name, external_name, l, w1, w2, b1, b2, b3, b4, b5, b6, b7, b8 )&#xD;&#xA;&#xD;&#xA;//Diagnostic Services&#xD;&#xA;#define ASSERT( booleanExpression )&#xD;&#xA;#define ASSERT_KINDOF( classname, pobject )&#xD;&#xA;#define ASSERT_VALID( pObject )&#xD;&#xA;#define TRACE( exp )&#xD;&#xA;#define TRACE0( exp )&#xD;&#xA;#define TRACE1( exp, param1 )&#xD;&#xA;#define TRACE2( exp, param1, param2 )&#xD;&#xA;#define TRACE3( exp, param1, param2, param3 )&#xD;&#xA;#define VERIFY( booleanExpression )&#xD;&#xA;&#xD;&#xA;//Exception processing&#xD;&#xA;#define TRY&#xD;&#xA;#define CATCH( exception_class, exception_object_pointer_name )&#xD;&#xA;#define CATCH_ALL( exception_object_pointer_name )&#xD;&#xA;#define AND_CATCH( exception_class, exception_object_pointer_name )&#xD;&#xA;#define AND_CATCH_ALL( exception_object_pointer_name )&#xD;&#xA;#define END_CATCH&#xD;&#xA;#define END_CATCH_ALL&#xD;&#xA;#define THROW( exception_object_pointer )&#xD;&#xA;#define THROW_LAST( )&#xD;&#xA;&#xD;&#xA;//Message Map Macros&#xD;&#xA;#define DECLARE_MESSAGE_MAP( )&#xD;&#xA;#define BEGIN_MESSAGE_MAP( theClass, baseClass )&#xD;&#xA;#define END_MESSAGE_MAP( )&#xD;&#xA;#define ON_COMMAND( id, memberFxn )&#xD;&#xA;#define ON_CONTROL( wNotifyCode, id, memberFxn )&#xD;&#xA;#define ON_MESSAGE( message, memberFxn )&#xD;&#xA;#define ON_OLECMD( pguid, olecmdid, id )&#xD;&#xA;#define ON_REGISTERED_MESSAGE( nMessageVariable, memberFxn )&#xD;&#xA;#define ON_REGISTERED_THREAD_MESSAGE( nMessageVariable, memberFxn )&#xD;&#xA;#define ON_THREAD_MESSAGE( message, memberFxn )&#xD;&#xA;#define ON_UPDATE_COMMAND_UI( id, memberFxn )&#xD;&#xA;#define ON_COMMAND_RANGE( id1, id2, memberFxn )&#xD;&#xA;#define ON_UPDATE_COMMAND_UI_RANGE( id1, id2, memberFxn )&#xD;&#xA;#define ON_CONTROL_RANGE( wNotifyCode, id1, id2, memberFxn )&#xD;&#xA;#define ON_WM_CREATE( )&#xD;&#xA;#define ON_WM_DESTROY( )&#xD;&#xA;#define ON_NOTIFY( wNotifyCode, id, memberFxn )&#xD;&#xA;#define ON_WM_TIMER( )&#xD;&#xA;#define ON_WM_SYSCOMMAND( )&#xD;&#xA;#define ON_BN_CLICKED( id, memberFxn )&#xD;&#xA;#define ON_WM_PAINT( )&#xD;&#xA;#define ON_WM_QUERYDRAGICON( )&#xD;&#xA;#define ON_WM_SIZE( )&#xD;&#xA;&#xD;&#xA;//Application information and management&#xD;&#xA;BOOL AFXAPI AfxWinInit( HINSTANCE hInstance, HINSTANCE hPrevInstance, LPTSTR lpCmdLine, int nCmdShow )&#xD;&#xA;&#xD;&#xA;//Database Macros and Globals&#xD;&#xA;#define AFX_ODBC_CALL( SQLFunc )&#xD;&#xA;#define AFX_SQL_ASYNC( prs, SQLFunc )&#xD;&#xA;#define AFX_SQL_SYNC( SQLFunc )&#xD;&#xA;&#xD;&#xA;//Internet Server API (ISAPI) Parse Maps&#xD;&#xA;#define BEGIN_PARSE_MAP( theClass, baseClass )&#xD;&#xA;#define ON_PARSE_COMMAND( FnName, mapClass, Args )&#xD;&#xA;#define ON_PARSE_COMMAND_PARAMS( Params )&#xD;&#xA;#define DEFAULT_PARSE_COMMAND( FnName, mapClass )&#xD;&#xA;#define END_PARSE_MAP( theClass )&#xD;&#xA;&#xD;&#xA;//Internet Server API (ISAPI) Diagnostic Macros&#xD;&#xA;#define ISAPIASSERT( booleanExpression )&#xD;&#xA;#define ISAPITRACE( exp )&#xD;&#xA;#define ISAPITRACE0( exp )&#xD;&#xA;#define ISAPITRACE1( exp, param1 )&#xD;&#xA;#define ISAPITRACE2( exp, param1, param2 )&#xD;&#xA;#define ISAPITRACE3( exp, param1, param2, param3 )&#xD;&#xA;#define ISAPIVERIFY( booleanExpression )&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// OLE Dispatch Maps&#xD;&#xA;#define DECLARE_DISPATCH_MAP( )&#xD;&#xA;#define BEGIN_DISPATCH_MAP( theClass, baseClass )&#xD;&#xA;#define END_DISPATCH_MAP( )&#xD;&#xA;#define DISP_FUNCTION( theClass, pszName, pfnMember, vtRetVal, vtsParams )&#xD;&#xA;#define DISP_PROPERTY( theClass, pszName, memberName, vtPropType )&#xD;&#xA;#define DISP_PROPERTY_EX( theClass, pszName, memberGet, memberSet, vtPropType )&#xD;&#xA;#define DISP_PROPERTY_NOTIFY( theClass, szExternalName, memberName, pfnAfterSet, vtPropType )&#xD;&#xA;#define DISP_PROPERTY_NOTIFY( theClass, pszExternalName, pfnGet, pfnSet, vtPropType, vtsParams )&#xD;&#xA;#define DISP_DEFVALUE( theClass, pszName )&#xD;&#xA;&#xD;&#xA;// OLE Type Library Access&#xD;&#xA;#define DECLARE_OLETYPELIB( class_name )&#xD;&#xA;#define IMPLEMENT_OLETYPELIB( class_name, tlid, wVerMajor, wVerMinor )&#xD;&#xA;&#xD;&#xA;// OLE Property Pages&#xD;&#xA;#define BEGIN_PROPPAGEIDS( class_name, count )&#xD;&#xA;#define END_PROPPAGEIDS( class_name )&#xD;&#xA;#define PROPPAGEID( clsid )&#xD;&#xA;&#xD;&#xA;// OLE Event Maps&#xD;&#xA;#define DECLARE_EVENT_MAP( )&#xD;&#xA;#define BEGIN_EVENT_MAP( theClass, baseClass )&#xD;&#xA;#define END_EVENT_MAP( )&#xD;&#xA;#define EVENT_CUSTOM( pszName, pfnFire, vtsParams )&#xD;&#xA;#define EVENT_CUSTOM_ID( pszName, dispid, pfnFire, vtsParams )&#xD;&#xA;#define ON_OLEVERB( idsVerbName, memberFxn )&#xD;&#xA;#define ON_STDOLEVERB( iVerb, memberFxn )&#xD;&#xA;&#xD;&#xA;// OLE Event Sink Maps&#xD;&#xA;#define BEGIN_EVENTSINK_MAP( theClass, baseClass )&#xD;&#xA;#define DECLARE_EVENTSINK_MAP( )&#xD;&#xA;#define END_EVENTSINK_MAP( )&#xD;&#xA;#define ON_EVENT( theClass, id, dispid, pfnHandler, vtsParams )&#xD;&#xA;#define ON_EVENT_RANGE( theClass, idFirst, idLast, dispid, pfnHandler, vtsParams )&#xD;&#xA;#define ON_EVENT_REFLECT( theClass, dispid, pfnHandler, vtsParams )&#xD;&#xA;#define ON_PROPNOTIFY( theClass, id, dispid, pfnRequest, pfnChanged )&#xD;&#xA;#define ON_PROPNOTIFY_RANGE( theClass, idFirst, idLast, dispid, pfnRequest, pfnChanged )&#xD;&#xA;#define ON_PROPNOTIFY_REFLECT( theClass, dispid, pfnRequest, pfnChanged )&#xD;&#xA;&#xD;&#xA;// OLE Connection Maps&#xD;&#xA;#define BEGIN_CONNECTION_PART( theClass, localClass )&#xD;&#xA;#define END_CONNECTION_PART( localClass )&#xD;&#xA;#define CONNECTION_IID( iid )&#xD;&#xA;#define DECLARE_CONNECTION_MAP( )&#xD;&#xA;#define BEGIN_CONNECTION_MAP( theClass, theBase )&#xD;&#xA;#define END_CONNECTION_MAP( )&#xD;&#xA;#define CONNECTION_PART( theClass, iid, localClass )&#xD;&#xA;&#xD;&#xA;// OLE Registering OLE Controls&#xD;&#xA;BOOL AFXAPI AfxOleRegisterPropertyPageClass( HINSTANCE hInstance, REFCLSID clsid, UINT idTypeName, int nRegFlags )&#xD;&#xA;&#xD;&#xA;// OLE Class Factories and Licensing&#xD;&#xA;#define DECLARE_OLECREATE_EX( class_name )&#xD;&#xA;#define IMPLEMENT_OLECREATE_EX( class_name, external_name, l, w1, w2, b1, b2, b3, b4, b5, b6, b7, b8 )&#xD;&#xA;#define BEGIN_OLEFACTORY( class_name )&#xD;&#xA;#define END_OLEFACTORY( class_name )&#xD;&#xA;&#xD;&#xA;//ATL&#xD;&#xA;#define DECLARE_AGGREGATABLE( x )&#xD;&#xA;#define DECLARE_CLASSFACTORY( )&#xD;&#xA;#define DECLARE_CLASSFACTORY_EX( cf )&#xD;&#xA;#define DECLARE_CLASSFACTORY2( lic )&#xD;&#xA;#define DECLARE_CLASSFACTORY_AUTO_THREAD( )&#xD;&#xA;#define DECLARE_CLASSFACTORY_SINGLETON( obj )&#xD;&#xA;#define DECLARE_GET_CONTROLLING_UNKNOWN( )&#xD;&#xA;#define DECLARE_NOT_AGGREGATABLE( x )&#xD;&#xA;#define DECLARE_ONLY_AGGREGATABLE( x )&#xD;&#xA;#define DECLARE_POLY_AGGREGATABLE( x )&#xD;&#xA;#define DECLARE_PROTECT_FINAL_CONSTRUCT( )&#xD;&#xA;#define BEGIN_CATEGORY_MAP( theClass )&#xD;&#xA;#define END_CATEGORY_MAP( )&#xD;&#xA;#define IMPLEMENTED_CATEGORY( catID )&#xD;&#xA;#define REQUIRED_CATEGORY( catID )&#xD;&#xA;#define BEGIN_COM_MAP( x )&#xD;&#xA;#define COM_INTERFACE_ENTRY( x )&#xD;&#xA;#define COM_INTERFACE_ENTRY_IID( iid, x )&#xD;&#xA;#define COM_INTERFACE_ENTRY2( x, x2 )&#xD;&#xA;#define COM_INTERFACE_ENTRY2_IID( iid, x, x2 )&#xD;&#xA;#define COM_INTERFACE_ENTRY_FUNC( iid, dw, func )&#xD;&#xA;#define COM_INTERFACE_ENTRY_FUNC_BLIND( dw, func )&#xD;&#xA;#define COM_INTERFACE_ENTRY_TEAR_OFF( iid, x )&#xD;&#xA;#define COM_INTERFACE_ENTRY_CACHED_TEAR_OFF( iid, x, punk )&#xD;&#xA;#define COM_INTERFACE_ENTRY_AGGREGATE( iid, punk )&#xD;&#xA;#define COM_INTERFACE_ENTRY_AGGREGATE_BLIND( punk )&#xD;&#xA;#define COM_INTERFACE_ENTRY_AUTOAGGREGATE( iid, punk, clsid )&#xD;&#xA;#define COM_INTERFACE_ENTRY_AUTOAGGREGATE_BLIND( punk, clsid )&#xD;&#xA;#define COM_INTERFACE_ENTRY_CHAIN( classname )&#xD;&#xA;#define COM_INTERFACE_ENTRY_BREAK( x )&#xD;&#xA;#define COM_INTERFACE_ENTRY_NOINTERFACE( x )&#xD;&#xA;#define END_COM_MAP( )&#xD;&#xA;&#xD;&#xA;#define BEGIN_SINK_MAP( _class )&#xD;&#xA;#define END_SINK_MAP( )&#xD;&#xA;#define SINK_ENTRY( id, dispid, fn )&#xD;&#xA;#define SINK_ENTRY_EX( id, iid, dispid, fn )&#xD;&#xA;#define SINK_ENTRY_INFO( id, iid, dispid, fn, info)&#xD;&#xA;#define BEGIN_CONNECTION_POINT_MAP( x )&#xD;&#xA;#define CONNECTION_POINT_ENTRY( iid )&#xD;&#xA;#define END_CONNECTION_POINT_MAP( )&#xD;&#xA;#define BEGIN_EXTENSION_SNAPIN_NODEINFO_MAP( classname )&#xD;&#xA;#define BEGIN_SNAPINTOOLBARID_MAP( _class )&#xD;&#xA;#define END_EXTENSION_SNAPIN_NODEINFO_MAP( )&#xD;&#xA;#define END_SNAPINTOOLBARID_MAP( _class )&#xD;&#xA;#define EXTENSION_SNAPIN_DATACLASS( dataClass )&#xD;&#xA;#define EXTENSION_SNAPIN_NODEINFO_ENTRY( dataClass )&#xD;&#xA;#define SNAPINMENUID( id )&#xD;&#xA;#define SNAPINTOOLBARID_ENTRY( id )&#xD;&#xA;#define ATLTRACE( exp )&#xD;&#xA;#define ATLTRACENOTIMPL( funcname )&#xD;&#xA;#define ATLTRACE2( DWORD category, UINT level, LPCSTR lpszFormat, ... )&#xD;&#xA;#define BEGIN_MSG_MAP( theClass )&#xD;&#xA;#define MESSAGE_HANDLER( msg, func )&#xD;&#xA;#define MESSAGE_RANGE_HANDLER( msgFirst, msgLast, func )&#xD;&#xA;#define COMMAND_HANDLER( id, code, func )&#xD;&#xA;#define COMMAND_ID_HANDLER( id, func )&#xD;&#xA;#define COMMAND_RANGE_HANDLER( idFirst, idLast, func )&#xD;&#xA;#define NOTIFY_HANDLER( id, cd, func )&#xD;&#xA;#define NOTIFY_ID_HANDLER( id, func )&#xD;&#xA;#define NOTIFY_CODE_HANDLER( cd, func )&#xD;&#xA;#define NOTIFY_RANGE_HANDLER( idFirst, idLast, func )&#xD;&#xA;#define CHAIN_MSG_MAP( theChainClass )&#xD;&#xA;#define CHAIN_MSG_MAP_MEMBER( theChainMember )&#xD;&#xA;#define CHAIN_MSG_MAP_ALT( theChainClass, msgMapID )&#xD;&#xA;#define CHAIN_MSG_MAP_ALT_MEMBER( theChainMember, msgMapID )&#xD;&#xA;#define CHAIN_MSG_MAP_DYNAMIC( dynaChainID )&#xD;&#xA;#define END_MSG_MAP( )&#xD;&#xA;#define ALT_MSG_MAP( msgMapID )&#xD;&#xA;#define DECLARE_EMPTY_MSG_MAP( )&#xD;&#xA;#define COMMAND_CODE_HANDLER( code, func )&#xD;&#xA;#define REFLECT_NOTIFICATIONS( )&#xD;&#xA;#define DEFAULT_REFLECTION_HANDLER( )&#xD;&#xA;#define BEGIN_OBJECT_MAP( x )&#xD;&#xA;#define OBJECT_ENTRY( clsid, class )&#xD;&#xA;#define OBJECT_ENTRY_NON_CREATEABLE( class )&#xD;&#xA;#define END_OBJECT_MAP( )&#xD;&#xA;#define DECLARE_OBJECT_DESCRIPTION( x )&#xD;&#xA;#define BEGIN_PROP_MAP( theClass )&#xD;&#xA;#define PROP_DATA_ENTRY( szDesc, member, vt )&#xD;&#xA;#define PROP_ENTRY( szDesc, dispid, clsid )&#xD;&#xA;#define PROP_ENTRY_EX( szDesc, dispid, clsid, iidDispatch )&#xD;&#xA;#define PROP_PAGE( clsid )&#xD;&#xA;#define END_PROPERTY_MAP( )&#xD;&#xA;#define DECLARE_NO_REGISTRY( )&#xD;&#xA;#define DECLARE_REGISTRY( class, pid, vpid, nid, flags )&#xD;&#xA;#define DECLARE_REGISTRY_RESOURCE( x )&#xD;&#xA;#define DECLARE_REGISTRY_RESOURCEID( x )&#xD;&#xA;#define BEGIN_SERVICE_MAP( theClass )&#xD;&#xA;#define END_SERVICE_MAP( )&#xD;&#xA;#define SERVICE_ENTRY( SID )&#xD;&#xA;#define SERVICE_ENTRY_CHAIN( punk )&#xD;&#xA;#define IMPLEMENT_BOOL_STOCKPROP( fname, pname, dispid )&#xD;&#xA;#define IMPLEMENT_BSTR_STOCKPROP( fname, pname, dispid )&#xD;&#xA;#define IMPLEMENT_STOCKPROP( type, fname, pname, dispid )&#xD;&#xA;#define A2BSTR(lpa)&#xD;&#xA;#define OLE2A(lpa)&#xD;&#xA;#define T2A(lpa)&#xD;&#xA;#define W2A(lpa)&#xD;&#xA;#define A2COLE(lpa)&#xD;&#xA;#define OLE2BSTR(lpa)&#xD;&#xA;#define T2BSTR(lpa)&#xD;&#xA;#define W2BSTR(lpa)&#xD;&#xA;#define A2CT(lpa)&#xD;&#xA;#define OLE2CA(lpa)&#xD;&#xA;#define T2CA(lpa)&#xD;&#xA;#define W2CA(lpa)&#xD;&#xA;#define A2CW(lpa)&#xD;&#xA;#define OLE2CT(lpa)&#xD;&#xA;#define T2COLE(lpa)&#xD;&#xA;#define W2COLE(lpa)&#xD;&#xA;#define A2OLE(lpa)&#xD;&#xA;#define OLE2CW(lpa)&#xD;&#xA;#define T2CW(lpa)&#xD;&#xA;#define W2CT(lpa)&#xD;&#xA;#define A2T(lpa)&#xD;&#xA;#define OLE2T(lpa)&#xD;&#xA;#define T2OLE(lpa)&#xD;&#xA;#define W2OLE(lpa)&#xD;&#xA;#define A2W(lpa)&#xD;&#xA;#define OLE2W(lpa)&#xD;&#xA;#define T2W(lpa)&#xD;&#xA;#define W2T(lpa)&#xD;&#xA;#define DEVMODEA2W(lpa)&#xD;&#xA;#define TEXTMETRICA2W(lpa)&#xD;&#xA;#define DEVMODEOLE2T(lpa)&#xD;&#xA;#define TEXTMETRICOLE2T(lpa)&#xD;&#xA;#define DEVMODET2OLE(lpa)&#xD;&#xA;#define TEXTMETRICT2OLE(lpa)&#xD;&#xA;#define DEVMODEW2A(lpa)&#xD;&#xA;#define TEXTMETRICW2A(lpa)&#xD;&#xA;#define DECLARE_WND_CLASS( WndClassName )&#xD;&#xA;#define DECLARE_WND_SUPERCLASS( WndClassName, OrigWndClassName )&#xD;&#xA;#define DECLARE_WND_CLASS_EX( WndClassName, style, bkgnd )&#xD;&#xA;&#xD;&#xA;// OLE DB&#xD;&#xA;#define BEGIN_ACCESSOR( num, bAuto )&#xD;&#xA;#define BEGIN_ACCESSOR_MAP( x, num )&#xD;&#xA;#define END_ACCESSOR( )&#xD;&#xA;#define END_ACCESSOR_MAP( )&#xD;&#xA;#define BEGIN_COLUMN_MAP( x )&#xD;&#xA;#define BOOKMARK_ENTRY( variable )&#xD;&#xA;#define COLUMN_ENTRY( nOrdinal, data )&#xD;&#xA;#define COLUMN_ENTRY_TYPE ( nOrdinal, wType, data )&#xD;&#xA;#define COLUMN_ENTRY_TYPE_SIZE( nOrdinal, wType, nLength, data )&#xD;&#xA;#define BLOB _ENTRY( nOrdinal, IID, flags, data )&#xD;&#xA;#define COLUMN_ENTRY_EX( nOrdinal, wType, nLength, nPrecision, nScale, data, length, status )&#xD;&#xA;#define COLUMN_ENTRY_LENGTH( nOrdinal, data, length )&#xD;&#xA;#define COLUMN_ENTRY_LENGTH_STATUS( nOrdinal, data, length, status )&#xD;&#xA;#define COLUMN_ENTRY_PS( nOrdinal, nPrecision, nScale, data ) &#xD;&#xA;#define COLUMN_ENTRY_PS_LENGTH( nOrdinal, nPrecision, nScale, data, length )&#xD;&#xA;#define COLUMN_ENTRY_PS_STATUS( nOrdinal, nPrecision, nScale, data, status )&#xD;&#xA;#define COLUMN_ENTRY_PS_LENGTH_STATUS( nOrdinal, nPrecision, nScale, data, length, status )&#xD;&#xA;#define COLUMN_ENTRY_STATUS( nOrdinal, data, status )&#xD;&#xA;#define END_COLUMN_MAP( )&#xD;&#xA;#define DEFINE_COMMAND( x, szCommand )&#xD;&#xA;#define BEGIN_PARAM_MAP( x )&#xD;&#xA;#define END_PARAM_MAP( )&#xD;&#xA;#define SET_PARAM_TYPE( type )&#xD;&#xA;#define BEGIN_PROPERTY_SET( pguid )&#xD;&#xA;#define BEGIN_PROPERTY_SET(pguid, flags)&#xD;&#xA;#define BEGIN_PROPSET_MAP( Class )&#xD;&#xA;#define CHAIN_PROPERTY_SET( ChainClass )&#xD;&#xA;#define END_PROPERTY_SET( guid )&#xD;&#xA;#define END_PROPSET_MAP( )&#xD;&#xA;#define PROPERTY_INFO_ENTRY( dwPropID )&#xD;&#xA;#define PROPERTY_INFO_ENTRY( dwPropID, vt, dwFlags, value, options)&#xD;&#xA;#define PROPERTY_INFO_ENTRY( dwPropID, value )&#xD;&#xA;#define BEGIN_PROVIDER_COLUMN_MAP( theClass ) &#xD;&#xA;#define END_PROVIDER_COLUMN_MAP( )&#xD;&#xA;#define PROVIDER_COLUMN_ENTRY_GN ( name, ordinal, flags, colSize, dbtype, precision, scale, guid )&#xD;&#xA;#define PROVIDER_COLUMN_ENTRY_FIXED( name, ordinal, dbtype, member )&#xD;&#xA;#define PROVIDER_COLUMN_ENTRY_LENGTH( name, ordinal, size, member )&#xD;&#xA;#define PROVIDER_COLUMN_ENTRY_STR( name, ordinal, member )&#xD;&#xA;#define PROVIDER_COLUMN_ENTRY_WSTR( name, ordinal, member )&#xD;&#xA;&#xD;&#xA;// PARSE&#xD;&#xA;#define BEGIN_PARSE_MAP( theClass, baseClass )&#xD;&#xA;#define ON_PARSE_COMMAND( FnName, mapClass, Args )&#xD;&#xA;#define ON_PARSE_COMMAND_PARAMS( Params )&#xD;&#xA;#define DEFAULT_PARSE_COMMAND( FnName, mapClass )&#xD;&#xA;#define END_PARSE_MAP( theClass )&#xD;&#xA;#define END_PROPERTY_SET( guid )&#xD;&#xA;#define BEGIN_PROPSET_MAP( Class )&#xD;&#xA;#define PROPERTY_INFO_ENTRY( dwPropID )&#xD;&#xA;#define END_PROPSET_MAP( )&#xD;&#xA;&#xD;&#xA;#define MAKELPARAM(low, high)&#xD;&#xA;#define MAKELRESULT(low, high)&#xD;&#xA;#define MAKELP(sel, off) &#xD;&#xA;#define SELECTOROF(lp) &#xD;&#xA;#define OFFSETOF(lp) &#xD;&#xA;#define FIELDOFFSET(type, field)&#xD;&#xA;#define afx_msg&#xD;&#xA;#define ACE_ALLOC_HOOK_DECLARE&#xD;&#xA;&#xD;&#xA;// xerces&#xD;&#xA;#define XERCES_CPP_NAMESPACE_BEGIN namespace xerces {&#xD;&#xA;#define XERCES_CPP_NAMESPACE_END }&#xD;&#xA;#define XERCES_CPP_NAMESPACE_USE using namespace XERCES_CPP_NAMESPACE;&#xD;&#xA;#define XERCES_CPP_NAMESPACE_QUALIFIER XERCES_CPP_NAMESPACE::&#xD;&#xA;#define CDOM_EXPORT&#xD;&#xA;#define ATL_NO_VTABLE&#xD;&#xA;#define PLATFORM_IMPORT&#xD;&#xA;#define PARSERS_EXPORT&#xD;&#xA;&#xD;&#xA;// QT&#xD;&#xA;#define Q_AUTOTEST_EXPORT&#xD;&#xA;#define Q_CLASSINFO(name, value)&#xD;&#xA;#define Q_COMPAT_EXPORT&#xD;&#xA;#define Q_CORE_EXPORT&#xD;&#xA;#define Q_CORE_EXPORT_INLINE inline&#xD;&#xA;#define Q_D(Class)&#xD;&#xA;#define Q_DECL_IMPORT&#xD;&#xA;#define Q_DECLARE_ASSOCIATIVE_ITERATOR(map)&#xD;&#xA;#define Q_DECLARE_BUILTIN_METATYPE(TYPE, NAME)&#xD;&#xA;#define Q_DECLARE_EXTENSION_INTERFACE(IFace, IId)&#xD;&#xA;#define Q_DECLARE_FLAGS(Flags, enum)&#xD;&#xA;#define Q_DECLARE_INTERFACE(IFace, IId)&#xD;&#xA;#define Q_DECLARE_METATYPE(txt)&#xD;&#xA;#define Q_DECLARE_MUTABLE_SEQUENTIAL_ITERATOR(c)&#xD;&#xA;#define Q_DECLARE_MUTABLE_ASSOCIATIVE_ITERATOR(c)&#xD;&#xA;#define Q_DECLARE_OPERATORS_FOR_FLAGS(Flags)&#xD;&#xA;#define Q_DECLARE_PRIVATE(Class)&#xD;&#xA;#define Q_DECLARE_PUBLIC(Class)&#xD;&#xA;#define Q_DECLARE_SEQUENTIAL_ITERATOR(name)&#xD;&#xA;#define Q_DECLARE_SHARED(name)&#xD;&#xA;#define Q_DECLARE_TYPEINFO(TYPE, FLAGS)&#xD;&#xA;#define Q_DECL_DEPRECATED&#xD;&#xA;#define Q_DISABLE_COPY(Class)&#xD;&#xA;#define Q_DUMMY_COMPARISON_OPERATOR(c)&#xD;&#xA;#define Q_ENUMS(x)&#xD;&#xA;#define Q_FLAGS(x)&#xD;&#xA;#define Q_GADGET&#xD;&#xA;#define Q_GUI_EXPORT&#xD;&#xA;#define Q_GUI_EXPORT_INLINE inline&#xD;&#xA;#define Q_INLINE_TEMPLATE&#xD;&#xA;#define Q_INTERFACES(x)&#xD;&#xA;#define Q_NETWORK_EXPORT&#xD;&#xA;#define Q_NOREPLY&#xD;&#xA;#define Q_OBJECT&#xD;&#xA;#define Q_OPENGL_EXPORT&#xD;&#xA;#define Q_OUTOFLINE_TEMPLATE inline&#xD;&#xA;#define Q_OVERRIDE(text)&#xD;&#xA;#define Q_PRIVATE_SLOT(d, signature)&#xD;&#xA;#define Q_PROPERTY(text)&#xD;&#xA;#define Q_Q(Class)&#xD;&#xA;#define Q_REQUIRED_RESULT&#xD;&#xA;#define Q_SCRIPTABLE&#xD;&#xA;#define Q_SIGNALS protected&#xD;&#xA;#define Q_SLOTS&#xD;&#xA;#define Q_SQL_EXPORT&#xD;&#xA;#define Q_SVG_EXPORT&#xD;&#xA;#define Q_TESTLIB_EXPORT&#xD;&#xA;#define Q_TYPENAME typename&#xD;&#xA;#define Q_XML_EXPORT&#xD;&#xA;&#xD;&#xA;#define QDBUS_EXPORT&#xD;&#xA;#define QDESIGNER_COMPONENTS_EXPORT&#xD;&#xA;#define QDESIGNER_EXTENSION_EXPORT&#xD;&#xA;#define QDESIGNER_SDK_EXPORT&#xD;&#xA;#define QDESIGNER_SHARED_EXPORT&#xD;&#xA;#define QDESIGNER_UILIB_EXPORT&#xD;&#xA;#define QDESIGNER_WIDGET_EXPORT&#xD;&#xA;#define QDOC_PROPERTY(text)&#xD;&#xA;&#xD;&#xA;#define QT_ASCII_CAST_WARN&#xD;&#xA;#define QT_ASCII_CAST_WARN_CONSTRUCTOR&#xD;&#xA;#define QT_ASSISTANT_CLIENT_EXPORT&#xD;&#xA;#define QT_BEGIN_HEADER&#xD;&#xA;#define QT_DEPRECATED&#xD;&#xA;#define QT_DEPRECATED_VARIABLE&#xD;&#xA;#define QT_DEPRECATED_CONSTRUCTOR&#xD;&#xA;#define QT_END_HEADER&#xD;&#xA;#define QT_FASTCALL&#xD;&#xA;#define QT_FT_BEGIN_HEADER&#xD;&#xA;#define QT_FT_END_HEADER&#xD;&#xA;#define QT_MOC_COMPAT&#xD;&#xA;#define QT_MODULE(name)&#xD;&#xA;#define QT_STATIC_CONST static const&#xD;&#xA;#define QT_STATIC_CONST_IMPL const&#xD;&#xA;#define QT_TR_NOOP(x)&#xD;&#xA;#define QT_TRANSLATE_NOOP(scope, x)&#xD;&#xA;&#xD;&#xA;#define slots&#xD;&#xA;#define signals protected&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Microsoft extension&#xD;&#xA;#define CALLBACK&#xD;&#xA;#define LRESULT void&#xD;&#xA;#define _ENTRY(p1, p2, p3, p4) p1&#xD;&#xA;&#xD;&#xA;#define CFX_EXPORT&#xD;&#xA;&#xD;&#xA;// GCC&#xD;&#xA;#define __extension__&#xD;&#xA;&#xD;&#xA;// Symbian macro&#xD;&#xA;#define _L(string) TPtrC((const TText*) string)&#xD;&#xA;#define _LIT(name,s) const static TListC&lt;sizeof(s)> name = {sizeof(s) -1,s}&#xD;&#xA;#define _LIT8(name,s) const static TListC&lt;sizeof(s)> name = {sizeof(s) -1,s}&#xD;&#xA;&#xD;&#xA;#define IMPORT_C /*__declspec(dllimport)*/&#xD;&#xA;#define EXPORT_C /*__declspec(dllexport)*/&#xD;&#xA;&#xD;&#xA;#define NONSHARABLE_CLASS(x) class x&#xD;&#xA;#define NONSHARABLE_STRUCT(x) struct x&#xD;&#xA;&#xD;&#xA;#define GLREF_D extern&#xD;&#xA;#define GLDEF_D&#xD;&#xA;#define LOCAL_D static&#xD;&#xA;#define GLREF_C extern&#xD;&#xA;#define GLDEF_C&#xD;&#xA;#define LOCAL_C static&#xD;&#xA;">
    <userDefinedAttributeCreationRule xmi:id="_7rMxYN9WEeSXCudwua_I0A" default="ASSOCIATION">
      <rules xmi:id="_7rMxYd9WEeSXCudwua_I0A" creationType="ATTRIBUTE" pattern="*" classType="DataType"/>
    </userDefinedAttributeCreationRule>
  </md.ce.cppAnsi.rt.options:CppLanguageOptions>
  <md.ce.csh.rt.options:CshLanguageOptions xmi:id="_D5AkAOQMEeCJQfWZbM1pkQ" commentStyle="0" header="@(#) $FILE_NAME" documentationProcessorID="STANDARD_PROCESSOR">
    <documentationTagProcessors xsi:type="md.ce.csh.code.documentation:CshDocumentationProcessor" xmi:id="_oOd1kI6vEeG5DZT_fiQl2g" ID="CSH_XML_PROCESSOR">
      <documentationTagManagers xmi:id="_oOd1kY6vEeG5DZT_fiQl2g" ID="CLASSIFIER">
        <documentationTags xmi:id="_oOd1ko6vEeG5DZT_fiQl2g" name="summary" valueEditable="false"/>
        <documentationTags xmi:id="_oOd1k46vEeG5DZT_fiQl2g" name="remarks" valueEditable="false"/>
        <documentationTags xmi:id="_oOd1lI6vEeG5DZT_fiQl2g" name="permission" valueEditable="false"/>
        <documentationTags xmi:id="_oOd1lY6vEeG5DZT_fiQl2g" name="example" valueEditable="false"/>
        <documentationTags xmi:id="_oOd1lo6vEeG5DZT_fiQl2g" name="seealso" valueEditable="false"/>
        <documentationTags xmi:id="_oOd1l46vEeG5DZT_fiQl2g" name="include" valueEditable="false"/>
      </documentationTagManagers>
      <documentationTagManagers xmi:id="_oOd1mI6vEeG5DZT_fiQl2g" ID="OPERATION">
        <documentationTags xmi:id="_oOd1mY6vEeG5DZT_fiQl2g" name="summary" valueEditable="false"/>
        <documentationTags xmi:id="_oOd1mo6vEeG5DZT_fiQl2g" name="value" valueEditable="false"/>
        <documentationTags xmi:id="_oOd1m46vEeG5DZT_fiQl2g" name="param" valueEditable="false"/>
        <documentationTags xmi:id="_oOd1nI6vEeG5DZT_fiQl2g" name="returns" valueEditable="false"/>
        <documentationTags xmi:id="_oOd1nY6vEeG5DZT_fiQl2g" name="exception" valueEditable="false"/>
        <documentationTags xmi:id="_oOd1no6vEeG5DZT_fiQl2g" name="permission" valueEditable="false"/>
        <documentationTags xmi:id="_oOd1n46vEeG5DZT_fiQl2g" name="example" valueEditable="false"/>
        <documentationTags xmi:id="_oOd1oI6vEeG5DZT_fiQl2g" name="seealso" valueEditable="false"/>
        <documentationTags xmi:id="_oOd1oY6vEeG5DZT_fiQl2g" name="include" valueEditable="false"/>
      </documentationTagManagers>
      <documentationTagManagers xmi:id="_oOd1oo6vEeG5DZT_fiQl2g" ID="ATTRIBUTE">
        <documentationTags xmi:id="_oOd1o46vEeG5DZT_fiQl2g" name="summary" valueEditable="false"/>
        <documentationTags xmi:id="_oOd1pI6vEeG5DZT_fiQl2g" name="permission" valueEditable="false"/>
        <documentationTags xmi:id="_oOd1pY6vEeG5DZT_fiQl2g" name="example" valueEditable="false"/>
        <documentationTags xmi:id="_oOd1po6vEeG5DZT_fiQl2g" name="seealso" valueEditable="false"/>
        <documentationTags xmi:id="_oOd1p46vEeG5DZT_fiQl2g" name="include" valueEditable="false"/>
      </documentationTagManagers>
    </documentationTagProcessors>
    <userDefinedAttributeCreationRule xmi:id="_7rMKVN9WEeSXCudwua_I0A" default="ASSOCIATION">
      <rules xmi:id="_7rMKVd9WEeSXCudwua_I0A" creationType="ATTRIBUTE" pattern="*" classType="DataType"/>
    </userDefinedAttributeCreationRule>
  </md.ce.csh.rt.options:CshLanguageOptions>
  <md.ce.msil.rt.options:MsilLanguageOptions xmi:id="_D5AkG-QMEeCJQfWZbM1pkQ" commentStyle="0" header="@(#) $FILE_NAME" documentationProcessorID="STANDARD_PROCESSOR">
    <userDefinedAttributeCreationRule xmi:id="_7rOmkt9WEeSXCudwua_I0A" default="ASSOCIATION">
      <rules xmi:id="_7rOmk99WEeSXCudwua_I0A" creationType="ATTRIBUTE" pattern="*" classType="DataType"/>
    </userDefinedAttributeCreationRule>
  </md.ce.msil.rt.options:MsilLanguageOptions>
  <md.ce.corbaidl.rt.options:CORBAIDLLanguageOptions xmi:id="_D5AkHuQMEeCJQfWZbM1pkQ" commentStyle="0" header="@(#) $FILE_NAME" documentationProcessorID="STANDARD_PROCESSOR">
    <userDefinedAttributeCreationRule xmi:id="_7rOmkN9WEeSXCudwua_I0A" default="ASSOCIATION">
      <rules xmi:id="_7rOmkd9WEeSXCudwua_I0A" creationType="ATTRIBUTE" pattern="*" classType="DataType"/>
    </userDefinedAttributeCreationRule>
  </md.ce.corbaidl.rt.options:CORBAIDLLanguageOptions>
</xmi:XMI>
